version: '3.8'

services:
  web:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - API_URL=http://localhost/api/v1/
        - AUTHSCH_CLIENT_ID=60451969490994503646
        - FACEBOOK_CLIENT_ID=616497219172280
        - GOOGLE_CLIENT_ID=834523770186-m52qdel4juccp05tbvdkorcbcd2jvd6p.apps.googleusercontent.com
        - SENTRY_URL=https://dhfiufsc9y2ufovnyjg8kevzd9jzh5qe@o651076.ingest.sentry.io/4461243
    image: bss-request-manager
    command: gunicorn --bind=0.0.0.0:8000 --workers=5 --threads=2 core.wsgi
    volumes:
      - backend_logs:/app/backend/logs
    ports:
      - 80:8000
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "python", "manage.py", "health_check"]
      interval: 5m
      timeout: 50s
      retries: 3
      start_period: 1m30s

  celery-worker:
    restart: always
    image: bss-request-manager
    command: celery -A core worker
    env_file:
      - ./backend/.env
    environment:
      - DJANGO_CONTAINER=false
    depends_on:
      - web
      - postgres
      - redis

  celery-beat:
    restart: always
    image: bss-request-manager
    command: celery -A core beat
    env_file:
      - ./backend/.env
    environment:
      - DJANGO_CONTAINER=false
    depends_on:
      - web
      - postgres
      - redis

  postgres:
    restart: always
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=myprojectuser
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=myproject

  redis:
    restart: always
    image: redis:6-alpine
    volumes:
      - redis_data:/data

volumes:
  backend_logs:
  postgres_data:
  redis_data:
